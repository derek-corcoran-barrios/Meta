Control <-  dplyr::filter(Abundance, AI == "control")
colnames(Treatment) <- paste("T", colnames(Treatment), sep = "_")
Abundance <- cbind(Control, Treatment[,c(9:13,15, 19, 20, 21)])
library(meta)
m <- metacont(n.e = T_Individuals..n., mean.e = T_Mean , sd.e = T_SE , n.c = Individuals..n., mean.c = Mean, sd.c = SE, studlab= Authors,data=Abundance, sm="SMD")
forest(m, xlab="Abundance", comb.random = TRUE)
funnel(m)
dat <- data.frame(id = c(100, 308, 1596, 2479, 9021, 9028, 161, 172, 537, 7049),
yi = c(-0.33, 0.32, 0.39, 0.31, 0.17, 0.64, -0.33, 0.15, -0.02, 0.00),
vi = c(0.084, 0.035, 0.017, 0.034, 0.072, 0.117, 0.102, 0.093, 0.012, 0.067),
random = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1),
intensity = c(7, 3, 7, 5, 7, 7, 4, 4, 5, 6))
View(dat)
dat <- escalc(measure="SMD", yi=yi, vi=vi, data=dat, slab=paste("Study ID:", id), digits=3)
View(dat)
baujat(b_res)
metabias(m)
data(Olkin95)
meta1 <- metabin(event.e, n.e, event.c, n.c,
data=Olkin95, subset=1:10,
sm="RR", method="I")
metabias(meta1)
metabias(meta1, plotit=TRUE)
metabias(m, plotit = TRUE)
funnel(m)
trimfill(m)
library(meta)
?metacont
m <- metacont(n.e = T_Individuals..n., mean.e = T_Mean , sd.e = T_SE , n.c = Individuals..n., mean.c = Mean, sd.c = SE, studlab= Authors,data=Abundance, sm="SMD", comb.random = TRUE, comb.fixed = FALSE)
forest(m, xlab="Abundance", comb.random = TRUE, comb.fixed = FALSE)
m
str(m)
str(Master.spreadsheet)
summary(Master.spreadsheet$Fitness.measure)
class(summary(Master.spreadsheet$Fitness.measure))
View(Abundance)
Reproduction <- dplyr::filter(Master.spreadsheet, Fitness.measure == "reproduction")
Reproduction <- dplyr::filter(Master.spreadsheet, Fitness.measure == "reproduction")
Treatment <- dplyr::filter(Reproduction, AI != "control")
Control <-  dplyr::filter(Reproduction, AI == "control")
NROW(Treatment)
NROW(Control)
Reproduction$AI
View(Master.spreadsheet)
Abundance$Organism
summary(Abundance$Organism)
summary(Abundance$Functional.group)
summary(Abundance$Common.Name)
summary(Abundance$Functional.group)
summary(Abundance$Fitness.measure)
summary(Master.spreadsheet$Fitness.measure)
summary(Abundance$Functional.group)
?rma
Master.spreadsheet <- read.csv("~/Metanalysis/Master spreadsheet.csv")
library(meta)
library(metafor)
###########Examples
Abundance <- dplyr::filter(Master.spreadsheet, Fitness.measure == "abundance")
Treatment <- dplyr::filter(Abundance, AI != "control")
Control <-  dplyr::filter(Abundance, AI == "control")
colnames(Treatment) <- paste("T", colnames(Treatment), sep = "_")
Abundance <- cbind(Control, Treatment[,c(9:13,15, 19, 20, 21)])
dat1 <- escalc(measure="SMD", m2i=Mean, sd2i=SE, n2i=Individuals..n., m1i=T_Mean, sd1i=T_SE, n1i=T_Individuals..n., data=Abundance)
res1 <- rma(yi, vi, data=dat1, refline = 0)
res1
forest(res1)
?rma
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE")
res1
forest(res1)
dat1
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods = Functional.group)
dat1 <- escalc(measure="SMD", m2i=Mean, sd2i=SE, n2i=Individuals..n., m1i=T_Mean, sd1i=T_SE, n1i=T_Individuals..n., data=Abundance)
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods = cbind(Functional.group))
res1
forest(res1)
?forest
summary(res1)
str(res1)
preds <- predict(res1, new.mods = c("predator", "omnivore"))
preds
Abundance$Functional.group
preds <- predict(res1, new.mods = c("predator", "omnivore", "pollinator\"))
preds <- predict(res1, new.mods = c("predator", "omnivore", "pollinator"))
preds <- predict(res1, new.mods = c("predator", "omnivore", "pollinator"))
preds
colnames(dat1)
dat1$Habitat
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods = cbind(Functional.group, Common.Name), slab = paste(dat1$Authors, dat1$Year))
res1
library(MuMIn)
dredge(res1)
?dredge
class(res)
class(res1)
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods = cbind(Functional.group), slab = paste(dat1$Authors, dat1$Year))
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods = cbind(Functional.group), slab = paste(dat1$Authors, dat1$Year))
preds <- predict(res1, new.mods = data.frame(Functional.group = c("predator", "omnivore", "pollinator")))
preds
?predict.rma
data("dat.bcg", package = "metafor")
print(dat.bcg, row.names = FALSE)
dat <- escalc(measure = "RR", ai = tpos, bi = tneg, ci = cpos, di = cneg, data = dat.bcg, append = TRUE)
dat
k <- length(dat.bcg$trial)
k
dat
k <- length(dat.bcg$trial)
dat.fm <- data.frame(study = factor(rep(1:k, each = 4)))
dat.fm$grp <- factor(rep(c("T", "T", "C", "C"), k), levels = c("T", "C"))
dat.fm$out <- factor(rep(c("+", "-", "+", "-"), k), levels = c("+", "-"))
dat.fm$freq <- with(dat.bcg, c(rbind(tpos, tneg, cpos, cneg)))
dat.fm
escalc(out ~ grp | study, weights = freq, data = dat.fm, measure = "RR")
dat
res <- rma(yi, vi, data = dat)
res
res <- rma(ai = tpos, bi = tneg, ci = cpos, di = cneg, data = dat,measure = "RR")
res
res <- rma(yi, vi, mods = cbind(ablat, year), data = dat)
res
predict(res, newmods = cbind(seq(from = 10, to = 60, by = 10), 1970), trasf = exp, addx = TRUE)
res1
preds <- predict(res1, new.mods = as.factor("predator", "omnivore", "pollinator"))
preds
preds <- predict(res1, new.mods = data.frame(Functional.group = as.factor("predator", "omnivore", "pollinator")), addx = TRUE)
preds
predict(res, newmods = cbind(seq(from = 10, to = 60, by = 10), 1970), trasf = exp, addx = TRUE)
data.frame(Functional.group = as.factor("predator", "omnivore", "pollinator"))
data.frame(Functional.group = as.factor("predator", "omnivore", "pollinator"))
data.frame(Functional.group = factor("predator", "omnivore", "pollinator"))
data.frame(Functional.group = c("predator", "omnivore", "pollinator"))
data.frame(Functional.group = as.factor(c("predator", "omnivore", "pollinator")))
predict(res1, new.mods = data.frame(Functional.group = as.factor(c("predator", "omnivore", "pollinator"))), addx = TRUE)
predict(res1, new.mods = data.frame(Functional.group = as.factor(c("predator", "omnivore", "pollinator"))))
Abundance$Functional.group
unique(Abundance$Functional.group)
rma(yi, vi, data=ddplyr::filter(dat1, Functional.group == "omnivore"), refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
rma(yi, vi, data=dplyr::filter(dat1, Functional.group == "omnivore"), refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
rma(yi, vi, data=dplyr::filter(dat1, Functional.group == "omnivore"), refline = 0, method = "HE")
unique(Abundance$Functional.group)
res1
data.frame(Functional.group = as.factor(c("predator", "omnivore", "pollinator"))
)
data.frame(Functional.group = as.factor(c("predator", "omnivore", "pollinator")))
class(data.frame(Functional.group = as.factor(c("predator", "omnivore", "pollinator"))))
rstudent(res1)
rstudent(res1)$resid
hist(rstudent(res1)$resid)
shapiro.test(rstudent(res1)$resid)
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rnorm(1000))
shapiro.test(rstudent(res1)$resid)
shapiro.test(rstandard(res1)$resid)
hist(rstandard(res1)$resid)
residuals(res1)
hist(residuals(res1))
rstudent(res1)
rstudent(res1)[-c(3,10,11,31),]
rstudent(res1)[-c(3,10,11,31),]$resid
hist(rstudent(res1)[-c(3,10,11,31),]$resid)
shapiro.test(rstudent(res1)[-c(3,10,11,31),]$resid)
shapiro.test(rstudent(res1)[-c(3,10,11,31),]$resid)
shapiro.test(rstudent(res1)[-c(3,10,11,31),]$resid)
library(meta)
library(metafor)
###########Examples
Abundance <- dplyr::filter(Master.spreadsheet, Fitness.measure == "abundance")
Treatment <- dplyr::filter(Abundance, AI != "control")
Control <-  dplyr::filter(Abundance, AI == "control")
colnames(Treatment) <- paste("T", colnames(Treatment), sep = "_")
Abundance <- cbind(Control, Treatment[,c(9:13,15, 19, 20, 21)])
Abundance$Functional.group <- as.character(Abundance$Functional.group)
dat1 <- escalc(measure="SMD", m2i=Mean, sd2i=SE, n2i=Individuals..n., m1i=T_Mean, sd1i=T_SE, n1i=T_Individuals..n., data=Abundance, vtype = "UB")
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Functional.group) - 1, slab = paste(dat1$Authors, dat1$Year))
res1
forest(res1)
confint(res1)
dat1$omnivore <- ifelse(dat1$Functional.group == "omnivore", 1, 0)
dat1$pollinator <- ifelse(dat1$Functional.group == "pollinator", 1, 0)
dat1$predator <- ifelse(dat1$Functional.group == "predator", 1, 0)
a <- rma(yi, vi, data=dat1, mods = cbind(omnivore, pollinator, predator), refline = 0, method = "HE")
a
forest(a)
#predict(a, new.mods = data.frame(Functional.group = as.factor(c("predator", "omnivore", "pollinator"))))
shapiro.test(rstudent(a)[-c(3,10,11,31),]$resid)
hist(rstudent(a)[-c(3,10,11,31),]$resid)
shapiro.test(rstudent(res1)[-c(3,10,11,31),]$resid)
inf <- influence(res1)
inf
plot(inf, plotdfb =TRUE)
### default forest plot of the observed log relative risks
forest(dat$yi, dat$vi)
forest(dat$yi, dat$vi, slab=paste(dat$author, dat$year, sep=", "), transf=exp,
alim=c(0,2), steps=5, xlim=c(-2.5,4), refline=1, cex=.9)
forest(dat$yi, dat$vi, slab=paste(dat$author, dat$year, sep=", "), atransf=exp,
at=log(c(.05,.25,1,4,20)), xlim=c(-10,8), cex=.9)
forest(dat$yi, dat$vi, slab=paste(dat$author, dat$year, sep=", "), atransf=exp,
at=log(c(.05,.25,1,4,20)), xlim=c(-10,8), cex=.9, subset=order(dat$yi))
Master.spreadsheet <- read.csv("~/Metanalysis/Master spreadsheet.csv")
library(meta)
library(metafor)
###########Examples
Abundance <- dplyr::filter(Master.spreadsheet, Fitness.measure == "abundance")
Treatment <- dplyr::filter(Abundance, AI != "control")
Control <-  dplyr::filter(Abundance, AI == "control")
colnames(Treatment) <- paste("T", colnames(Treatment), sep = "_")
Abundance <- cbind(Control, Treatment[,c(9:13,15, 19, 20, 21)])
Abundance$Functional.group <- as.character(Abundance$Functional.group)
dat1 <- escalc(measure="SMD", m2i=Mean, sd2i=SE, n2i=Individuals..n., m1i=T_Mean, sd1i=T_SE, n1i=T_Individuals..n., data=Abundance, vtype = "UB")
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Functional.group) - 1, slab = paste(dat1$Authors, dat1$Year))
res1
forest(res1)
confint(res1)
dat1$omnivore <- ifelse(dat1$Functional.group == "omnivore", 1, 0)
dat1$pollinator <- ifelse(dat1$Functional.group == "pollinator", 1, 0)
dat1$predator <- ifelse(dat1$Functional.group == "predator", 1, 0)
a <- rma(yi, vi, data=dat1, mods = cbind(omnivore, pollinator, predator), refline = 0, method = "HE")
a
forest(a)
preds <- predict(a, new.mods = data.frame(Functional.group = as.factor(c("predator", "omnivore", "pollinator"))))
preds <- preds[c(1,3,9),c(1,3,4)]
resTotal <-rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
forest(dat1$yi, dat1$vi, slab = paste(dat1$Authors, dat1$Year))
addpoly(x = preds$pred, ci.lb = preds$ci.lb, ci.ub = preds$ci.ub, mlab = c("Omnivore", "Pollinator", "Predator"), cex = 1)
forest(dat1$yi, dat1$vi, slab = paste(dat1$Authors, dat1$Year))
addpoly(x = preds$pred, ci.lb = preds$ci.lb, ci.ub = preds$ci.ub, mlab = c("Omnivore", "Pollinator", "Predator"))
forest(resTotal, slab = paste(dat1$Authors, dat1$Year), annotate = TRUE)
addpoly(x = preds$pred, ci.lb = preds$ci.lb, ci.ub = preds$ci.ub, mlab = c("Omnivore", "Pollinator", "Predator"), cex = 1)
citation(package = "metafor")
citation()
library(DiversityOccupancy)
Meta_MasterData <- read.csv("~/Metanalysis/Meta_MasterData.csv")
View(Meta_MasterData)
summary(Meta_MasterData$Functional.group)
summary(Meta_MasterData$Fitness.measure)
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
View
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
View(Meta)
library(ggplot2)
ggplot(Meta, aes(x =Fitness.measure)) + geom_bar()
ggplot(Meta, aes(x =Fitness.measure)) + geom_bar(aes(fill = Functional.group))
?geom_bar
ggplot(Meta, aes(x =Fitness.measure)) + geom_bar(aes(fill = Functional.group), position = "dodge")
View(Meta)
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
ggplot(Meta, aes(x=reorder(Position,Position,
function(x)-length(x))))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies")
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
ggplot(Meta, aes(x=reorder(Position,Position,
function(x)-length(x)))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies")
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure,
function(x)-length(x)))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies")
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies")
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Functional.group), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies")
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Order), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies")
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Study.Type), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic() + scale_fill_grey()
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
library(metafor)
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
nullmod <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Null"), p = res$pval)
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Functional.group) - 1, slab = paste(dat1$Authors, dat1$Year))
res1
str(res1)
functionalgroup <- data.frame(estimate = res1$b, ci.ub = res1$ci.ub, ci.lb = res1$ci.lb, group = c("detritivore", "omnivore", "pollinator", "predator"), p = res1$pval)
All <- rbind(nullmod, functionalgroup)
knitr::kable(All)
functionalgroup <- data.frame(estimate = res1$b, ci.ub = res1$ci.ub, ci.lb = res1$ci.lb, group = c("detritivore", "omnivore", "pollinator", "predator"), p = res1$pval)
group = c("detritivore", "omnivore", "pollinator", "predator")
ncol(dplyr::filter(Abundance, Functional.group == "detritivore"))
View(Abundance)
dplyr::filter(Abundance, Functional.group == "detritivore")
ncol(dplyr::filter(Abundance, Functional.group == "detritivore"))
length(dplyr::filter(Abundance, Functional.group == "detritivore")$Functional.group)
dplyr::filter(Abundance, Functional.group == "pollinator")
View(dplyr::filter(Abundance, Functional.group == "pollinator"))
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
library(metafor)
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Abundance$Con_Mean
Abundance$Con_Mean$T1_Mean
Abundance$T1_Mean
Abundance$T1_SE
Abundance$Con_SE
Abundance$Study.control..nn
Abundance$Study.control..n.
Abundance$Study.T1..n.
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
dat1
Abundance[75,]
View(Abundance[75,])
nrow(Abundance)
library(DiversityOccupancy)
batchoccu2 <- function (pres, sitecov, obscov, spp, form, dredge = FALSE, multi = FALSE)
{
secuencia <- c(1:spp) * (ncol(pres)/spp)
secuencia2 <- secuencia - (secuencia[1] - 1)
models <- vector("list", spp)
fit <- matrix(NA, nrow(pres), spp)
colnames(fit) <- paste("species", 1:spp, sep = ".")
if (dredge == FALSE) {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- occu(form, data2)
fit[, i] <- suppressWarnings(predict(models[[i]],
type = "state", newdata = sitecov))$Predicted
print(paste("Species", as.character(i), "ready!"))
}
}
else {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
dredged <- suppressWarnings(dredge(occu(form, data2)))
if(multi = FALSE) {models[[i]] <- eval(getCall(dredged, 1))
fit[, i] <- predict(models[[i]], type = "state",
newdata = sitecov)$Predicted
print(paste("Species", as.character(i), "ready!"))}
else {
models[[i]] <- dredged
temp[[i]] <-  eval(getCall(dredged, 1))
fit[, i] <- predict(temp[[i]], type = "state",
newdata = sitecov)$Predicted
print(paste("Species", as.character(i), "ready!"))
}
}
}
result <- list(Covs = sitecov, models = models, fit = fit)
class(result) <- "batchoccupancy"
return(result)
}
batchoccu2 <- function (pres, sitecov, obscov, spp, form, dredge = FALSE, multi = FALSE)
{
secuencia <- c(1:spp) * (ncol(pres)/spp)
secuencia2 <- secuencia - (secuencia[1] - 1)
models <- vector("list", spp)
fit <- matrix(NA, nrow(pres), spp)
colnames(fit) <- paste("species", 1:spp, sep = ".")
if (dredge == FALSE) {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- occu(form, data2)
fit[, i] <- suppressWarnings(predict(models[[i]],
type = "state", newdata = sitecov))$Predicted
print(paste("Species", as.character(i), "ready!"))
}
}
else {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
dredged <- suppressWarnings(dredge(occu(form, data2)))
if(multi = FALSE) {models[[i]] <- eval(getCall(dredged, 1))
fit[, i] <- predict(models[[i]], type = "state",
newdata = sitecov)$Predicted
print(paste("Species", as.character(i), "ready!"))}
else {
models[[i]] <- dredged
temp[[i]] <-  eval(getCall(dredged, 1))
fit[, i] <- predict(temp[[i]], type = "state",
newdata = sitecov)$Predicted
print(paste("Species", as.character(i), "ready!"))
}
}
}
result <- list(Covs = sitecov, models = models, fit = fit)
class(result) <- "batchoccupancy"
return(result)
}
unique(Meta$Fitness.measure)
library(DiversityOccupancy)
batchoccu
library(DiversityOccupancy)
batchoccu2 <- function (pres, sitecov, obscov, spp, form, dredge = FALSE)
{
secuencia <- c(1:spp) * (ncol(pres)/spp)
secuencia2 <- secuencia - (secuencia[1] - 1)
models <- vector("list", spp)
fit <- matrix(NA, nrow(pres), spp)
colnames(fit) <- paste("species", 1:spp, sep = ".")
if (dredge == FALSE) {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- occu(form, data2)
print(paste("Species", as.character(i), "ready!"))
}
}
else {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- suppressWarnings(dredge(occu(form, data2)))
print(paste("Species", as.character(i), "ready!"))
}
}
result <- list(Covs = sitecov, models = models)
class(result) <- "batchoccupancy"
return(result)
}
?batchoccu
BirdOccupancy <-batchoccu2(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp =  5, form = ~ Day + Wind + Rain + Noise + Clouds ~
Elev + AgroFo + SecVec + Wetland, dredge = TRUE)
BirdOccupancy$models
BirdOccupancy$models[[1]]
class(BirdOccupancy$models[[1]])
batchoccu2 <- function (pres, sitecov, obscov, spp, form, dredge = FALSE)
{
secuencia <- c(1:spp) * (ncol(pres)/spp)
secuencia2 <- secuencia - (secuencia[1] - 1)
models <- vector("list", spp)
fit <- matrix(NA, nrow(pres), spp)
colnames(fit) <- paste("species", 1:spp, sep = ".")
if (dredge == FALSE) {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- occu(form, data2)
print(paste("Species", as.character(i), "ready!"))
}
}
else {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- model.avg(suppressWarnings(dredge(occu(form, data2))), delta < 2)
print(paste("Species", as.character(i), "ready!"))
}
}
result <- list(Covs = sitecov, models = models)
class(result) <- "batchoccupancy"
return(result)
}
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu2(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp =  5, form = ~ Day + Wind + Rain + Noise + Clouds ~
Elev + AgroFo + SecVec + Wetland, dredge = TRUE)
class(BirdOccupancy$models[[1]])
BirdOccupancy$models[[1]]
BirdOccupancy$models[[2]]
summary(BirdOccupancy$models[[2]])
confint(BirdOccupancy$models[[2]])
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior, vtype = "UB")
res2 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
library(metafor)
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior, vtype = "UB")
res2 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
res2
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=survival, vtype = "UB")
res3 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
res3
reproduction <- dplyr::filter(Meta, Fitness.measure == "reproduction")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=reproduction, vtype = "UB")
res4 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
res4
dat1
cbind(dat1$Authors, dat1$PubYear, dat1$yi, dat1$vi)
data.frame(authors = as.character(dat1$Authors), PubYear = as.character(dat1$PubYear), yi = dat1$yi, vi = dat1$vi)
test <- data.frame(authors = as.character(dat1$Authors), PubYear = as.character(dat1$PubYear), yi = dat1$yi, vi = dat1$vi)
write.csv(test, "test.csv")
