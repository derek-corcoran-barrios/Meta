Cols <- c("Order", "Functional group", "Treatment Type", "Neonic")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
dat1
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
Abundance_g_kg <- dplyr::filter(Abundance, Application.Units == "g/kg")
Abundance_g_kg$TreatmentType
dat1$TreatmentType
dat1$Treatment.2
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
Behavior_ppb <- Behavior[!is.na(Behavior$T1_ppb),]
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior_ppb, vtype = "UB")
ols <- c("Order", "Functional group", "Nesting Area", "Neonic", "Treatment Type", "Study Type", "Concentration [ppb]")
Cols <- c("Order", "Functional group", "Nesting Area", "Neonic", "Treatment Type", "Study Type", "Concentration [ppb]")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
id
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "factor(Treatment.2)", "factor(TreatmentType)", "factor(Study.Type)","T1_ppb")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
resbehav <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
resbehav <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
Behavior_ppb <- Behavior[!is.na(Behavior$T1_ppb),]
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior_ppb, vtype = "UB")
dat1
condition <- dplyr::filter(Meta, Fitness.measure == "condition")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=condition, vtype = "UB")
Cols <- c("Order", "Functional group", "Nesting Area", "Neonic", "Treatment Type", "Study Type")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "factor(Treatment.2)", "factor(TreatmentType)", "factor(Study.Type)")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
rescondition <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
modelCond <- data.frame(model = character(length(rescondition)), pvalue = numeric(length(rescondition)), R_squared = numeric(length(rescondition)), n = numeric(length(rescondition)), AICc = numeric(length(rescondition)), stringsAsFactors = FALSE)
for (i in 1:length(rescondition)){
modelCond[i,1]<- ModelNames[i]
modelCond[i,2]<- rescondition[[i]]$QMp
modelCond[i,3]<- round(rescondition[[i]]$R2/100,2)
modelCond[i,4]<- NROW(dat1)
modelCond[i,5]<- rescondition[[i]]$fit.stats$ML[5]
}
modelCond
condition <- dplyr::filter(Meta, Fitness.measure == "condition")
condition_ppb <- Reproduction[!is.na(condition$T1_ppb),]
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=condition, vtype = "UB")
Cols <- c("Order", "Functional group", "Nesting Area", "Neonic", "Treatment Type", "Study Type", "Concentration [ppb]")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "factor(Treatment.2)", "factor(TreatmentType)", "factor(Study.Type)", "T1_ppb")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
rescondition <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
modelCond <- data.frame(model = character(length(rescondition)), pvalue = numeric(length(rescondition)), R_squared = numeric(length(rescondition)), n = numeric(length(rescondition)), AICc = numeric(length(rescondition)), stringsAsFactors = FALSE)
for (i in 1:length(rescondition)){
modelCond[i,1]<- ModelNames[i]
modelCond[i,2]<- rescondition[[i]]$QMp
modelCond[i,3]<- round(rescondition[[i]]$R2/100,2)
modelCond[i,4]<- NROW(dat1)
modelCond[i,5]<- rescondition[[i]]$fit.stats$ML[5]
}
head(modelCond)
condition <- dplyr::filter(Meta, Fitness.measure == "condition")
condition_ppb <- condition[!is.na(condition$T1_ppb),]
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=condition, vtype = "UB")
Cols <- c("Order", "Functional group", "Nesting Area", "Neonic", "Treatment Type", "Study Type", "Concentration [ppb]")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "factor(Treatment.2)", "factor(TreatmentType)", "factor(Study.Type)", "T1_ppb")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
rescondition <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
modelCond <- data.frame(model = character(length(rescondition)), pvalue = numeric(length(rescondition)), R_squared = numeric(length(rescondition)), n = numeric(length(rescondition)), AICc = numeric(length(rescondition)), stringsAsFactors = FALSE)
for (i in 1:length(rescondition)){
modelCond[i,1]<- ModelNames[i]
modelCond[i,2]<- rescondition[[i]]$QMp
modelCond[i,3]<- round(rescondition[[i]]$R2/100,2)
modelCond[i,4]<- NROW(dat1)
modelCond[i,5]<- rescondition[[i]]$fit.stats$ML[5]
}
modelCond <- dplyr::arrange(modelCond, AICc)
modelCond$deltaAICc <- (modelCond$AICc - min(modelCond$AICc))
SUMDELTA <- sum(exp(-0.5*modelCond$deltaAICc))
modelCond$Weight <- exp(-0.5*modelCond$deltaAICc)/SUMDELTA
modelCond <- dplyr::filter(modelCond, deltaAICc < 5)
modelCond
condition <- dplyr::filter(Meta, Fitness.measure == "condition")
condition_ppb <- condition[!is.na(condition$T1_ppb),]
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=condition_ppb, vtype = "UB")
dat1$Order
dat1$Functional.group
dat1$Nesting.Area
dat1$Treatment.2
dat1$Study.Type
condition <- dplyr::filter(Meta, Fitness.measure == "condition")
condition_ppb <- condition[!is.na(condition$T1_ppb),]
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=condition_ppb, vtype = "UB")
Cols <- c("Order", "Functional group", "Nesting Area", "Neonic", "Treatment Type", "Study Type", "Concentration [ppb]")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "factor(Treatment.2)", "factor(TreatmentType)", "factor(Study.Type)", "T1_ppb")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
rescondition <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
unique(dat1$Order)
unique(dat1$Functional.group)
unique(dat1$Nesting.Area)
unique(dat1$Treatment.2)
unique(dat1$TreatmentType)
Meta <- readRDS("Meta2.rds")
library(ggplot2)
library(metafor)
Meta <- readRDS("Meta2.rds")
library(ggplot2)
library(metafor)
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
#### Names
Cols <- c("Order", "Functional group", "Treatment Type", "Neonic", "Nesting Area")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(TreatmentType)", "factor(Treatment.2)", "factor(Nesting.Area)")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
resabund <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Functional.group), slab = paste(dat1$Authors, dat1$Year))
modelAbund <- data.frame(model = character(length(resabund)), pvalue = numeric(length(resabund)), R_squared = numeric(length(resabund)), n = numeric(length(resabund)), AICc = numeric(length(resabund)), stringsAsFactors = FALSE)
for (i in 1:length(resabund)){
modelAbund[i,1]<- ModelNames[i]
modelAbund[i,2]<- resabund[[i]]$QMp
modelAbund[i,3]<- round(resabund[[i]]$R2/100,2)
modelAbund[i,4]<- NROW(dat1)
modelAbund[i,5]<- resabund[[i]]$fit.stats$ML[5]
}
unique(Abundance$Functional.group)
unique(Abundance$TreatmentType)
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
Abundance_kg_ha <- dplyr::filter(Abundance, Application.Units == "kg/ha")
Abundance_kg_ha <- dplyr::filter(Abundance_kg_ha, TreatmentType == "powder/granular")
#### Names
Cols <- c("Order", "Functional group", "Nesting Area", "Concentration [Kg/Ha]")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
id
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance_kg_ha, vtype = "UB")
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "AI.Rate_T1")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
id
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
Formulas
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
Abundance_g_kg <- dplyr::filter(Abundance, Application.Units == "g/kg")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance_g_kg, vtype = "UB")
Cols <- c("Order", "Functional group", "Nesting Area", "Concentration [g/Kg]")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
id
ModelNames
ModelNames
grep("Conc", ModelNames)
ModelNames[grep("Conc", ModelNames)]
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "AI.Rate_T1")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
Formulas
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=survival, vtype = "UB")
Cols <- c("Order", "Functional group", "Nesting Area", "Neonic", "Treatment Type", "Study Type")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "factor(Treatment.2)", "factor(TreatmentType)", "factor(Study.Type)")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
resSurvival <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
ModelSurv <- data.frame(model = character(length(resSurvival)), pvalue = numeric(length(resSurvival)), R_squared = numeric(length(resSurvival)), n = numeric(length(resSurvival)), AICc = numeric(length(resSurvival)), stringsAsFactors = FALSE)
for (i in 1:length(resSurvival)){
ModelSurv[i,1]<- ModelNames[i]
ModelSurv[i,2]<- resSurvival[[i]]$QMp
ModelSurv[i,3]<- round(resSurvival[[i]]$R2/100,2)
ModelSurv[i,4]<- NROW(dat1)
ModelSurv[i,5]<- resSurvival[[i]]$fit.stats$ML[5]
}
resSurvival[[5]]
Meta <- readRDS("Meta2.rds")
library(ggplot2)
library(metafor)
### Reproduction, functional group and Order
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=survival, vtype = "UB")
Cols <- c("Order", "Functional group", "Nesting Area", "Neonic", "Treatment Type", "Study Type")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "factor(Treatment.2)", "factor(TreatmentType)", "factor(Study.Type)")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
resSurvival <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
ModelSurv <- data.frame(model = character(length(resSurvival)), pvalue = numeric(length(resSurvival)), R_squared = numeric(length(resSurvival)), n = numeric(length(resSurvival)), AICc = numeric(length(resSurvival)), stringsAsFactors = FALSE)
for (i in 1:length(resSurvival)){
ModelSurv[i,1]<- ModelNames[i]
ModelSurv[i,2]<- resSurvival[[i]]$QMp
ModelSurv[i,3]<- round(resSurvival[[i]]$R2/100,2)
ModelSurv[i,4]<- NROW(dat1)
ModelSurv[i,5]<- resSurvival[[i]]$fit.stats$ML[5]
}
resSurvival[[5]]
unique(dat1$TreatmentType)
predict(resSurvival[[5]], unique(dat1$TreatmentType))
class(resSurvival[[5]])
?predict.rma()
predict(resSurvival[[5]], "soil treatment")
predict(resSurvival[[5]], "lab compound")
predict(resSurvival[[5]], newmods = cbind("lab compound"))
newmods = expand.grid(Functional.group = c("mixed","predator"))
newmods
resSurvival[[5]]
unique(dat1$TreatmentType)
newmods = expand.grid(TreatmentType = c("powder/granular", "soil treatment", "foliar", "lab compound", "seed treatment")))
newmods = expand.grid(TreatmentType = c("powder/granular", "soil treatment", "foliar", "lab compound", "seed treatment"))
newmods
predict(resSurvival[[5]], newmods)
newmods = expand.grid(TreatmentType = c("powder/granular", "soil treatment", "lab compound", "seed treatment"))
predict(resSurvival[[5]], newmods)
Meta <- readRDS("Meta.rds")
library(ggplot2)
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Functional.group), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
Meta <- readRDS("Meta2.rds")
setwd("/home/derek/Documents/Meta/Meta/MetanalysisNeonics")
Meta <- readRDS("Meta2.rds")
library(ggplot2)
library(metafor)
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=survival, vtype = "UB")
Cols <- c("Order", "Functional group", "Nesting Area", "Neonic", "Treatment Type", "Study Type")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "factor(Treatment.2)", "factor(TreatmentType)", "factor(Study.Type)")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
resSurvival <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
ModelSurv <- data.frame(model = character(length(resSurvival)), pvalue = numeric(length(resSurvival)), R_squared = numeric(length(resSurvival)), n = numeric(length(resSurvival)), AICc = numeric(length(resSurvival)), stringsAsFactors = FALSE)
for (i in 1:length(resSurvival)){
ModelSurv[i,1]<- ModelNames[i]
ModelSurv[i,2]<- resSurvival[[i]]$QMp
ModelSurv[i,3]<- round(resSurvival[[i]]$R2/100,2)
ModelSurv[i,4]<- NROW(dat1)
ModelSurv[i,5]<- resSurvival[[i]]$fit.stats$ML[5]
}
resSurvival[[5]]
unique(dat1$TreatmentType)
library(caret)
newmods = expand.grid(TreatmentType = c("foliar",  "lab compound", "powder/granular", "seed treatment", "soil treatment"))
dum <- dummyVars(~ Functional.group, data = newmods)
dum <- dummyVars(~ TreatmentType, data = newmods)
NM <- cbind(newmods,predict(dum, newmods))
preds <- predict(resSurvival[[5]], newmods =NM, addx = TRUE)
NM
preds <- predict(resSurvival[[5]], newmods =NM[,-2], addx = TRUE)
preds <- predict(resSurvival[[5]], newmods =NM[,-c(1:2))], addx = TRUE)
preds <- predict(resSurvival[[5]], newmods =NM[,-c(1:2)], addx = TRUE)
preds
resSurvival[[5]]
plot(resSurvival[[5]])
resSurvival[[5]]$b
resSurvival[[5]]$ci.lb
resSurvival[[5]]$ci.ub
setwd("/home/derek/Documents/Meta/Meta/MetanalysisNeonics")
Meta <- readRDS("Meta2.rds")
library(ggplot2)
library(metafor)
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=survival, vtype = "UB")
Cols <- c("Order", "Functional group", "Nesting Area", "Neonic", "Treatment Type", "Study Type")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
ModelNames <- sapply(id,function(i)
paste("y~",paste(Cols[i],collapse="+"))
)
Cols <- c("factor(Order)", "factor(Functional.group)", "factor(Nesting.Area)", "factor(Treatment.2)", "factor(TreatmentType)", "factor(Study.Type)")
n <- length(Cols)
id <- unlist(
lapply(1:n,
function(i)combn(1:n,i,simplify=FALSE)
)
,recursive=FALSE)
Formulas <- sapply(id,function(i)
paste("~",paste(Cols[i],collapse="+"))
)
resSurvival <- lapply(Formulas,function(i)
rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =as.formula(i), slab = paste(dat1$Authors, dat1$Year))
)
ModelSurv <- data.frame(model = character(length(resSurvival)), pvalue = numeric(length(resSurvival)), R_squared = numeric(length(resSurvival)), n = numeric(length(resSurvival)), AICc = numeric(length(resSurvival)), stringsAsFactors = FALSE)
for (i in 1:length(resSurvival)){
ModelSurv[i,1]<- ModelNames[i]
ModelSurv[i,2]<- resSurvival[[i]]$QMp
ModelSurv[i,3]<- round(resSurvival[[i]]$R2/100,2)
ModelSurv[i,4]<- NROW(dat1)
ModelSurv[i,5]<- resSurvival[[i]]$fit.stats$ML[5]
}
ModelSurv <- dplyr::arrange(ModelSurv, AICc)
ModelSurv$deltaAICc <- (ModelSurv$AICc - min(ModelSurv$AICc))
SUMDELTA <- sum(exp(-0.5*ModelSurv$deltaAICc))
ModelSurv$Weight <- exp(-0.5*ModelSurv$deltaAICc)/SUMDELTA
ModelSurv <- dplyr::filter(ModelSurv, deltaAICc < 5)
SurvTreatment <- data.frame(estimate = resSurvival[[5]]$b, ci.ub = resSurvival[[5]]$ci.ub, ci.lb = resSurvival[[5]]$ci.lb, group = c("foliar","lab compound", "powder/granular", "seed treatment", "soil treatment"), p = resSurvival[[5]]$pval, n = c(NROW(dplyr::filter(survival, TreatmentType == "foliar")),NROW(dplyr::filter(survival, TreatmentType == "lab compound")), NROW(dplyr::filter(survival, TreatmentType == "powder/granular")), NROW(dplyr::filter(survival, TreatmentType == "seed treatment")), NROW(dplyr::filter(survival, TreatmentType == "soil treatment"))))
###NULL
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=survival, vtype = "UB")
res3 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Surviv <- data.frame(estimate = res3$b, ci.ub = res3$ci.ub, ci.lb = res3$ci.lb, group = c("Null"), p = res3$pval, n =nrow(survival), I2= res3$I2, pvalCT = res3$QEp)
SurvTreatment <- cbind(SurvTreatment, Surviv)
SurvTreatment
SurvTreatment <- data.frame(estimate = resSurvival[[5]]$b, ci.ub = resSurvival[[5]]$ci.ub, ci.lb = resSurvival[[5]]$ci.lb, group = c("foliar","lab compound", "powder/granular", "seed treatment", "soil treatment"), p = resSurvival[[5]]$pval, n = c(NROW(dplyr::filter(survival, TreatmentType == "foliar")),NROW(dplyr::filter(survival, TreatmentType == "lab compound")), NROW(dplyr::filter(survival, TreatmentType == "powder/granular")), NROW(dplyr::filter(survival, TreatmentType == "seed treatment")), NROW(dplyr::filter(survival, TreatmentType == "soil treatment"))))
SurvTreatment
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=survival, vtype = "UB")
res3 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Surviv <- data.frame(estimate = res3$b, ci.ub = res3$ci.ub, ci.lb = res3$ci.lb, group = c("Null"), p = res3$pval, n =nrow(survival), I2= res3$I2, pvalCT = res3$QEp)
Surviv
SurvTreatment <- rbind(SurvTreatment, Surviv)
colnames(Surviv)
colnames(SurvTreatment)
Surviv <- data.frame(estimate = res3$b, ci.ub = res3$ci.ub, ci.lb = res3$ci.lb, group = c("Null"), p = res3$pval, n =nrow(survival))
SurvTreatment <- rbind(SurvTreatment, Surviv)
ggplot(SurvTreatment, aes(x = group, y = estimate)) + geom_point(aes(size = n)) + coord_flip() + geom_errorbar(aes(ymin=ci.lb, ymax=ci.ub),width=0.0) + geom_hline(yintercept = 0, linetype=2) + ylim(c(-34, 34)) + ylab(c("Standardized Mean Difference")) + theme_classic() + xlab(c(""))
