library(metafor)
###########Examples
Abundance <- dplyr::filter(Master.spreadsheet, Fitness.measure == "abundance")
Treatment <- dplyr::filter(Abundance, AI != "control")
Control <-  dplyr::filter(Abundance, AI == "control")
colnames(Treatment) <- paste("T", colnames(Treatment), sep = "_")
Abundance <- cbind(Control, Treatment[,c(9:13,15, 19, 20, 21)])
Abundance$Functional.group <- as.character(Abundance$Functional.group)
dat1 <- escalc(measure="SMD", m2i=Mean, sd2i=SE, n2i=Individuals..n., m1i=T_Mean, sd1i=T_SE, n1i=T_Individuals..n., data=Abundance, vtype = "UB")
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Functional.group) - 1, slab = paste(dat1$Authors, dat1$Year))
res1
forest(res1)
confint(res1)
dat1$omnivore <- ifelse(dat1$Functional.group == "omnivore", 1, 0)
dat1$pollinator <- ifelse(dat1$Functional.group == "pollinator", 1, 0)
dat1$predator <- ifelse(dat1$Functional.group == "predator", 1, 0)
a <- rma(yi, vi, data=dat1, mods = cbind(omnivore, pollinator, predator), refline = 0, method = "HE")
a
forest(a)
#predict(a, new.mods = data.frame(Functional.group = as.factor(c("predator", "omnivore", "pollinator"))))
shapiro.test(rstudent(a)[-c(3,10,11,31),]$resid)
hist(rstudent(a)[-c(3,10,11,31),]$resid)
shapiro.test(rstudent(res1)[-c(3,10,11,31),]$resid)
inf <- influence(res1)
inf
plot(inf, plotdfb =TRUE)
### default forest plot of the observed log relative risks
forest(dat$yi, dat$vi)
forest(dat$yi, dat$vi, slab=paste(dat$author, dat$year, sep=", "), transf=exp,
alim=c(0,2), steps=5, xlim=c(-2.5,4), refline=1, cex=.9)
forest(dat$yi, dat$vi, slab=paste(dat$author, dat$year, sep=", "), atransf=exp,
at=log(c(.05,.25,1,4,20)), xlim=c(-10,8), cex=.9)
forest(dat$yi, dat$vi, slab=paste(dat$author, dat$year, sep=", "), atransf=exp,
at=log(c(.05,.25,1,4,20)), xlim=c(-10,8), cex=.9, subset=order(dat$yi))
Master.spreadsheet <- read.csv("~/Metanalysis/Master spreadsheet.csv")
library(meta)
library(metafor)
###########Examples
Abundance <- dplyr::filter(Master.spreadsheet, Fitness.measure == "abundance")
Treatment <- dplyr::filter(Abundance, AI != "control")
Control <-  dplyr::filter(Abundance, AI == "control")
colnames(Treatment) <- paste("T", colnames(Treatment), sep = "_")
Abundance <- cbind(Control, Treatment[,c(9:13,15, 19, 20, 21)])
Abundance$Functional.group <- as.character(Abundance$Functional.group)
dat1 <- escalc(measure="SMD", m2i=Mean, sd2i=SE, n2i=Individuals..n., m1i=T_Mean, sd1i=T_SE, n1i=T_Individuals..n., data=Abundance, vtype = "UB")
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Functional.group) - 1, slab = paste(dat1$Authors, dat1$Year))
res1
forest(res1)
confint(res1)
dat1$omnivore <- ifelse(dat1$Functional.group == "omnivore", 1, 0)
dat1$pollinator <- ifelse(dat1$Functional.group == "pollinator", 1, 0)
dat1$predator <- ifelse(dat1$Functional.group == "predator", 1, 0)
a <- rma(yi, vi, data=dat1, mods = cbind(omnivore, pollinator, predator), refline = 0, method = "HE")
a
forest(a)
preds <- predict(a, new.mods = data.frame(Functional.group = as.factor(c("predator", "omnivore", "pollinator"))))
preds <- preds[c(1,3,9),c(1,3,4)]
resTotal <-rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
forest(dat1$yi, dat1$vi, slab = paste(dat1$Authors, dat1$Year))
addpoly(x = preds$pred, ci.lb = preds$ci.lb, ci.ub = preds$ci.ub, mlab = c("Omnivore", "Pollinator", "Predator"), cex = 1)
forest(dat1$yi, dat1$vi, slab = paste(dat1$Authors, dat1$Year))
addpoly(x = preds$pred, ci.lb = preds$ci.lb, ci.ub = preds$ci.ub, mlab = c("Omnivore", "Pollinator", "Predator"))
forest(resTotal, slab = paste(dat1$Authors, dat1$Year), annotate = TRUE)
addpoly(x = preds$pred, ci.lb = preds$ci.lb, ci.ub = preds$ci.ub, mlab = c("Omnivore", "Pollinator", "Predator"), cex = 1)
citation(package = "metafor")
citation()
library(DiversityOccupancy)
Meta_MasterData <- read.csv("~/Metanalysis/Meta_MasterData.csv")
View(Meta_MasterData)
summary(Meta_MasterData$Functional.group)
summary(Meta_MasterData$Fitness.measure)
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
View
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
View(Meta)
library(ggplot2)
ggplot(Meta, aes(x =Fitness.measure)) + geom_bar()
ggplot(Meta, aes(x =Fitness.measure)) + geom_bar(aes(fill = Functional.group))
?geom_bar
ggplot(Meta, aes(x =Fitness.measure)) + geom_bar(aes(fill = Functional.group), position = "dodge")
View(Meta)
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
ggplot(Meta, aes(x=reorder(Position,Position,
function(x)-length(x))))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies")
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
ggplot(Meta, aes(x=reorder(Position,Position,
function(x)-length(x)))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies")
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure,
function(x)-length(x)))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies")
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies")
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Functional.group), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies")
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Order), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies")
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Study.Type), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic() + scale_fill_grey()
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
library(metafor)
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
nullmod <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Null"), p = res$pval)
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Functional.group) - 1, slab = paste(dat1$Authors, dat1$Year))
res1
str(res1)
functionalgroup <- data.frame(estimate = res1$b, ci.ub = res1$ci.ub, ci.lb = res1$ci.lb, group = c("detritivore", "omnivore", "pollinator", "predator"), p = res1$pval)
All <- rbind(nullmod, functionalgroup)
knitr::kable(All)
functionalgroup <- data.frame(estimate = res1$b, ci.ub = res1$ci.ub, ci.lb = res1$ci.lb, group = c("detritivore", "omnivore", "pollinator", "predator"), p = res1$pval)
group = c("detritivore", "omnivore", "pollinator", "predator")
ncol(dplyr::filter(Abundance, Functional.group == "detritivore"))
View(Abundance)
dplyr::filter(Abundance, Functional.group == "detritivore")
ncol(dplyr::filter(Abundance, Functional.group == "detritivore"))
length(dplyr::filter(Abundance, Functional.group == "detritivore")$Functional.group)
dplyr::filter(Abundance, Functional.group == "pollinator")
View(dplyr::filter(Abundance, Functional.group == "pollinator"))
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
library(metafor)
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Abundance$Con_Mean
Abundance$Con_Mean$T1_Mean
Abundance$T1_Mean
Abundance$T1_SE
Abundance$Con_SE
Abundance$Study.control..nn
Abundance$Study.control..n.
Abundance$Study.T1..n.
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
dat1
Abundance[75,]
View(Abundance[75,])
nrow(Abundance)
library(DiversityOccupancy)
batchoccu2 <- function (pres, sitecov, obscov, spp, form, dredge = FALSE, multi = FALSE)
{
secuencia <- c(1:spp) * (ncol(pres)/spp)
secuencia2 <- secuencia - (secuencia[1] - 1)
models <- vector("list", spp)
fit <- matrix(NA, nrow(pres), spp)
colnames(fit) <- paste("species", 1:spp, sep = ".")
if (dredge == FALSE) {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- occu(form, data2)
fit[, i] <- suppressWarnings(predict(models[[i]],
type = "state", newdata = sitecov))$Predicted
print(paste("Species", as.character(i), "ready!"))
}
}
else {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
dredged <- suppressWarnings(dredge(occu(form, data2)))
if(multi = FALSE) {models[[i]] <- eval(getCall(dredged, 1))
fit[, i] <- predict(models[[i]], type = "state",
newdata = sitecov)$Predicted
print(paste("Species", as.character(i), "ready!"))}
else {
models[[i]] <- dredged
temp[[i]] <-  eval(getCall(dredged, 1))
fit[, i] <- predict(temp[[i]], type = "state",
newdata = sitecov)$Predicted
print(paste("Species", as.character(i), "ready!"))
}
}
}
result <- list(Covs = sitecov, models = models, fit = fit)
class(result) <- "batchoccupancy"
return(result)
}
batchoccu2 <- function (pres, sitecov, obscov, spp, form, dredge = FALSE, multi = FALSE)
{
secuencia <- c(1:spp) * (ncol(pres)/spp)
secuencia2 <- secuencia - (secuencia[1] - 1)
models <- vector("list", spp)
fit <- matrix(NA, nrow(pres), spp)
colnames(fit) <- paste("species", 1:spp, sep = ".")
if (dredge == FALSE) {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- occu(form, data2)
fit[, i] <- suppressWarnings(predict(models[[i]],
type = "state", newdata = sitecov))$Predicted
print(paste("Species", as.character(i), "ready!"))
}
}
else {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
dredged <- suppressWarnings(dredge(occu(form, data2)))
if(multi = FALSE) {models[[i]] <- eval(getCall(dredged, 1))
fit[, i] <- predict(models[[i]], type = "state",
newdata = sitecov)$Predicted
print(paste("Species", as.character(i), "ready!"))}
else {
models[[i]] <- dredged
temp[[i]] <-  eval(getCall(dredged, 1))
fit[, i] <- predict(temp[[i]], type = "state",
newdata = sitecov)$Predicted
print(paste("Species", as.character(i), "ready!"))
}
}
}
result <- list(Covs = sitecov, models = models, fit = fit)
class(result) <- "batchoccupancy"
return(result)
}
unique(Meta$Fitness.measure)
library(DiversityOccupancy)
batchoccu
library(DiversityOccupancy)
batchoccu2 <- function (pres, sitecov, obscov, spp, form, dredge = FALSE)
{
secuencia <- c(1:spp) * (ncol(pres)/spp)
secuencia2 <- secuencia - (secuencia[1] - 1)
models <- vector("list", spp)
fit <- matrix(NA, nrow(pres), spp)
colnames(fit) <- paste("species", 1:spp, sep = ".")
if (dredge == FALSE) {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- occu(form, data2)
print(paste("Species", as.character(i), "ready!"))
}
}
else {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- suppressWarnings(dredge(occu(form, data2)))
print(paste("Species", as.character(i), "ready!"))
}
}
result <- list(Covs = sitecov, models = models)
class(result) <- "batchoccupancy"
return(result)
}
?batchoccu
BirdOccupancy <-batchoccu2(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp =  5, form = ~ Day + Wind + Rain + Noise + Clouds ~
Elev + AgroFo + SecVec + Wetland, dredge = TRUE)
BirdOccupancy$models
BirdOccupancy$models[[1]]
class(BirdOccupancy$models[[1]])
batchoccu2 <- function (pres, sitecov, obscov, spp, form, dredge = FALSE)
{
secuencia <- c(1:spp) * (ncol(pres)/spp)
secuencia2 <- secuencia - (secuencia[1] - 1)
models <- vector("list", spp)
fit <- matrix(NA, nrow(pres), spp)
colnames(fit) <- paste("species", 1:spp, sep = ".")
if (dredge == FALSE) {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- occu(form, data2)
print(paste("Species", as.character(i), "ready!"))
}
}
else {
for (i in 1:length(secuencia)) {
data <- pres[, secuencia2[i]:secuencia[i]]
data2 <- unmarkedFrameOccu(y = data, siteCovs = sitecov,
obsCovs = obscov)
models[[i]] <- model.avg(suppressWarnings(dredge(occu(form, data2))), delta < 2)
print(paste("Species", as.character(i), "ready!"))
}
}
result <- list(Covs = sitecov, models = models)
class(result) <- "batchoccupancy"
return(result)
}
data("IslandBirds")
data("Daily_Cov")
data("siteCov")
BirdOccupancy <-batchoccu2(pres = IslandBirds, sitecov = siteCov, obscov =
Daily_Cov, spp =  5, form = ~ Day + Wind + Rain + Noise + Clouds ~
Elev + AgroFo + SecVec + Wetland, dredge = TRUE)
class(BirdOccupancy$models[[1]])
BirdOccupancy$models[[1]]
BirdOccupancy$models[[2]]
summary(BirdOccupancy$models[[2]])
confint(BirdOccupancy$models[[2]])
Meta <- read.csv("~/Metanalysis/Meta_MasterData.csv")
Meta <- Meta[1:188,]
library(ggplot2)
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior, vtype = "UB")
res2 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
library(metafor)
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior, vtype = "UB")
res2 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
res2
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=survival, vtype = "UB")
res3 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
res3
reproduction <- dplyr::filter(Meta, Fitness.measure == "reproduction")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=reproduction, vtype = "UB")
res4 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
res4
dat1
cbind(dat1$Authors, dat1$PubYear, dat1$yi, dat1$vi)
data.frame(authors = as.character(dat1$Authors), PubYear = as.character(dat1$PubYear), yi = dat1$yi, vi = dat1$vi)
test <- data.frame(authors = as.character(dat1$Authors), PubYear = as.character(dat1$PubYear), yi = dat1$yi, vi = dat1$vi)
write.csv(test, "test.csv")
install.packages("metafor")
ssessionInfo()
sessionInfo()
library(ggplot2)
install.packages(c("abind", "acepack", "aqp", "arm", "BH", "broom", "car", "caret", "chron", "coda", "coin", "colorspace", "curl", "data.table", "DBI", "DEoptimR", "devtools", "digest", "dismo", "e1071", "effects", "fields", "gdistance", "git2r", "goftest", "googleVis", "gstat", "gtrendsR", "haven", "Hmisc", "htmlwidgets", "httr", "irlba", "jsonlite", "leaflet", "lubridate", "maps", "maptools", "merTools", "meta", "minpack.lm", "mnormt", "openssl", "packrat", "permute", "plotrix", "proto", "psych", "quantreg", "R6", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "reshape", "reshape2", "rgdal", "rgeos", "RgoogleMaps", "rmarkdown", "robustbase", "R.oo", "roxygen2", "rsconnect", "rstudioapi", "R.utils", "shiny", "sjmisc", "sjPlot", "sjstats", "sp", "spacetime", "spam", "SparseM", "spatstat", "stringdist", "stringi", "stringr", "survival", "TH.data", "tibble", "tidyr", "vegan", "withr", "XML", "zoo"))
sessionInfo()
Meta <- readRDS("Meta_data.rds")
View(Meta)
Meta <- readRDS("Meta_data.rds")
library(ggplot2)
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Functional.group), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Order), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
library(metafor)
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Abund <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Abundance"), p = res$pval, n =nrow(Abundance))
#Behavior
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior, vtype = "UB")
res2 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Behav <- data.frame(estimate = res2$b, ci.ub = res2$ci.ub, ci.lb = res2$ci.lb, group = c("Behavior"), p = res2$pval, n =nrow(Behavior))
#Survival
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=survival, vtype = "UB")
res3 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Surviv <- data.frame(estimate = res3$b, ci.ub = res3$ci.ub, ci.lb = res3$ci.lb, group = c("Survival"), p = res3$pval, n =nrow(survival))
#Reproduction
reproduction <- dplyr::filter(Meta, Fitness.measure == "reproduction")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=reproduction, vtype = "UB")
res4 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Reprod <- data.frame(estimate = res4$b, ci.ub = res4$ci.ub, ci.lb = res4$ci.lb, group = c("Reproduction"), p = res4$pval, n =nrow(reproduction))
#Condition
condition <- dplyr::filter(Meta, Fitness.measure == "condition")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=condition, vtype = "UB")
res4 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Cond <- data.frame(estimate = res4$b, ci.ub = res4$ci.ub, ci.lb = res4$ci.lb, group = c("Condition"), p = res4$pval, n =nrow(condition))
All <- rbind(Abund, Behav, Surviv, Reprod, Cond)
knitr::kable(All, digits = 3, row.names = FALSE)
All <- All[-4,]
ggplot(All, aes(x = group, y = estimate)) + geom_point(aes(size = n)) + coord_flip() + geom_errorbar(aes(ymin=ci.lb, ymax=ci.ub),width=0.0) + geom_hline(yintercept = 0, linetype=2) + ylim(c(-10, 10)) + ylab(c("Standardized Mean Difference")) + theme_classic() + xlab(c(""))
library(meta)
library(metafor)
###########Examples
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
nullmod <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Null"), p = res$pval, n =nrow(Abundance))
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Functional.group) - 1, slab = paste(dat1$Authors, dat1$Year))
functionalgroup <- data.frame(estimate = res1$b, ci.ub = res1$ci.ub, ci.lb = res1$ci.lb, group = c("detritivore", "omnivore", "pollinator", "predator"), p = res1$pval, n = c(length(dplyr::filter(Abundance, Functional.group == "detritivore")$Functional.group), length(dplyr::filter(Abundance, Functional.group == "omnivore")$Functional.group), length(dplyr::filter(Abundance, Functional.group == "pollinator")$Functional.group), length(dplyr::filter(Abundance, Functional.group == "predator")$Functional.group)))
View(functionalgroup)
View(res1)
str(res1)
res1
dat1
View(dat1)
Survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Survival, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
nullmod <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Null"), p = res$pval, n =nrow(Survival))
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Nesting.Area) - 1, slab = paste(dat1$Authors, dat1$Year))
res1
length(dplyr::filter(Survival, Functional.group == "ground")$Nesting.Area)
length(dplyr::filter(Survival, Nesting.Area == "ground")$Nesting.Area))
length(dplyr::filter(Survival, Nesting.Area == "ground")$Nesting.Area)
library(meta)
library(metafor)
###########Examples
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
nullmod <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Null"), p = res$pval, n =nrow(Behavior))
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Nesting.Area) - 1, slab = paste(dat1$Authors, dat1$Year))
res1
library(meta)
library(metafor)
###########Examples
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
nullmod <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Null"), p = res$pval, n =nrow(Behavior))
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Nesting.Area) - 1, slab = paste(dat1$Authors, dat1$Year))
Nesting <- data.frame(estimate = res1$b, ci.ub = res1$ci.ub, ci.lb = res1$ci.lb, group = c("aboveground", "both", "ground"), p = res1$pval, n = c(length(dplyr::filter(Behavior, Nesting.Area == "aboveground")$Nesting.Area), length(dplyr::filter(Behavior, Nesting.Area == "both")$Nesting.Area), length(dplyr::filter(Behavior, Nesting.Area == "ground")$Nesting.Area)))
All <- rbind(nullmod, Nesting)
knitr::kable(All, digits = 3, row.names = FALSE)
Meta_Data <- read.csv("~/Documents/Meta/Meta/Meta_MasterDataNEW.csv")
View(Meta_Data)
Meta <- Meta_Data
library(ggplot2)
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Functional.group), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Order), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Study.Type), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Foraging.Area), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Nesting.Area), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
library(metafor)
#Abundance
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Abund <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Abundance"), p = res$pval, n =nrow(Abundance))
#Behavior
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior, vtype = "UB")
res2 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Behav <- data.frame(estimate = res2$b, ci.ub = res2$ci.ub, ci.lb = res2$ci.lb, group = c("Behavior"), p = res2$pval, n =nrow(Behavior))
#Survival
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
Meta_Data <- read.csv("~/Documents/Meta/Meta/Meta_MasterDataNEW.csv")
View(Meta_Data)
Meta <- Meta_Data
library(ggplot2)
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar() + xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Functional.group), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Order), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
ggplot(Meta, aes(x=reorder(Fitness.measure,Fitness.measure, function(x)-length(x)))) + geom_bar(aes(fill = Study.Type), position = "dodge")+ xlab("Performance measure") + ylab("Number of studies") + theme_classic()
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
str(Abundance)
Meta$Con_Mean <- as.numeric(as.character(Meta$Con_Mean))
Meta$Con_Mean
View(Meta_Data)
Meta_Data <- read.csv("~/Documents/Meta/Meta/Meta_MasterDataNEW.csv")
View(Meta_Data)
Meta <- Meta_Data
str(Meta)
library(metafor)
#Abundance
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Abund <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Abundance"), p = res$pval, n =nrow(Abundance))
#Behavior
Behavior <- dplyr::filter(Meta, Fitness.measure == "behavior")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Behavior, vtype = "UB")
res2 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Behav <- data.frame(estimate = res2$b, ci.ub = res2$ci.ub, ci.lb = res2$ci.lb, group = c("Behavior"), p = res2$pval, n =nrow(Behavior))
#Survival
survival <- dplyr::filter(Meta, Fitness.measure == "survival")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=survival, vtype = "UB")
res3 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Surviv <- data.frame(estimate = res3$b, ci.ub = res3$ci.ub, ci.lb = res3$ci.lb, group = c("Survival"), p = res3$pval, n =nrow(survival))
#Reproduction
reproduction <- dplyr::filter(Meta, Fitness.measure == "reproduction")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=reproduction, vtype = "UB")
res4 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Reprod <- data.frame(estimate = res4$b, ci.ub = res4$ci.ub, ci.lb = res4$ci.lb, group = c("Reproduction"), p = res4$pval, n =nrow(reproduction))
#Condition
condition <- dplyr::filter(Meta, Fitness.measure == "condition")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=condition, vtype = "UB")
res4 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
Cond <- data.frame(estimate = res4$b, ci.ub = res4$ci.ub, ci.lb = res4$ci.lb, group = c("Condition"), p = res4$pval, n =nrow(condition))
All <- rbind(Abund, Behav, Surviv, Reprod, Cond)
knitr::kable(All, digits = 3, row.names = FALSE)
All <- All[-4,]
ggplot(All, aes(x = group, y = estimate)) + geom_point(aes(size = n)) + coord_flip() + geom_errorbar(aes(ymin=ci.lb, ymax=ci.ub),width=0.0) + geom_hline(yintercept = 0, linetype=2) + ylim(c(-10, 10)) + ylab(c("Standardized Mean Difference")) + theme_classic() + xlab(c(""))
```
library(meta)
library(metafor)
###########Examples
Abundance <- dplyr::filter(Meta, Fitness.measure == "abundance")
dat1 <- escalc(measure="SMDH", m2i=Con_Mean, sd2i=Con_SE, n2i=Study.control..n., m1i=T1_Mean, sd1i=T1_SE, n1i=Study.T1..n., data=Abundance, vtype = "UB")
res <- rma(yi, vi, data=dat1, refline = 0, method = "HE", slab = paste(dat1$Authors, dat1$Year))
nullmod <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Null"), p = res$pval, n =nrow(Abundance))
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Functional.group) - 1, slab = paste(dat1$Authors, dat1$Year))
res1
nullmod <- data.frame(estimate = res$b, ci.ub = res$ci.ub, ci.lb = res$ci.lb, group = c("Null"), p = res$pval, n =nrow(Abundance))
res1 <- rma(yi, vi, data=dat1, refline = 0, method = "HE", mods =~  factor(Functional.group) - 1, slab = paste(dat1$Authors, dat1$Year))
functionalgroup <- data.frame(estimate = res1$b, ci.ub = res1$ci.ub, ci.lb = res1$ci.lb, group = c("detritivore","mixed", "omnivore", "pollinator", "predator"), p = res1$pval, n = c(length(dplyr::filter(Abundance, Functional.group == "detritivore")$Functional.group),length(dplyr::filter(Abundance, Functional.group == "mixed")$Functional.group), length(dplyr::filter(Abundance, Functional.group == "omnivore")$Functional.group), length(dplyr::filter(Abundance, Functional.group == "pollinator")$Functional.group), length(dplyr::filter(Abundance, Functional.group == "predator")$Functional.group)))
All <- rbind(nullmod, functionalgroup)
knitr::kable(All, digits = 3, row.names = FALSE)
ggplot(All, aes(x = group, y = estimate)) + geom_point(aes(size = n)) + coord_flip() + geom_errorbar(aes(ymin=ci.lb, ymax=ci.ub),width=0.0) + geom_hline(yintercept = 0, linetype=2) + ylim(c(-6, 6)) + ylab(c("Standardized Mean Difference")) + theme_classic() + xlab(c(""))
Meta_Data <- read.csv("~/Documents/Meta/Meta/Meta_MasterDataNEW.csv")
View(Meta_Data)
saveRDS(Meta_Data, "Meta_data.rds")
