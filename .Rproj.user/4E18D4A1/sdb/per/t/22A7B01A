{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Community Analysis Hymenoptera\"\nauthor: \"Anson Main and Derek Corcoran\"\ndate: \"October 5, 2016\"\noutput:\n  pdf_document:\n    fig_caption: yes\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\nlibrary(ggplot2)\nlibrary(vegan)\nlibrary(stargazer)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(glmulti)\nlibrary(lme4)\n```\n\n#Data\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.\n\nWhen you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\nBeeDiversity <- read.csv(\"~/Metanalysis/BeeDiversity.csv\")\nBeesOnly <- BeeDiversity[1:24,-(1:4)]\nrow.names(BeesOnly) <- BeeDiversity$FieldID[1:24]\nBeesManagement <- BeeDiversity[1:24,1:4]\n\n```\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE, fig.cap=\"Anosim analisis between Treated and Untreated Fields\"}\nBees.dist <- vegdist(BeesOnly)\nBees.ano <- anosim(Bees.dist, BeesManagement$Treatment)\nplot(Bees.ano)\n```\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE, fig.cap=\"Anosim analisis between different management areas\"}\nBees.ano2 <- anosim(Bees.dist, BeesManagement[,2])\nplot(Bees.ano2)\n```\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE, results='hide'}\nexample_NMDS=metaMDS(BeesOnly,k=2,trymax=100)\n```\n\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\n\n\ndata.scores <- as.data.frame(scores(example_NMDS))  #Using the scores function from vegan to extract the site scores and convert to a data.frame\ndata.scores$site <- rownames(data.scores)  # create a column of site names, from the rownames of data.scores\ndata.scores <- cbind(data.scores, BeesManagement)  #  add the grp variable created earlier\n```\n##NMDS Treated Untreated\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\ngrp.T <- data.scores[data.scores$Treatment == \"treated\", ][chull(data.scores[data.scores$Treatment == \"treated\", c(\"NMDS1\", \"NMDS2\")]), ]  # hull values for grp Treatment\ngrp.U <- data.scores[data.scores$Treatment == \"untreated\", ][chull(data.scores[data.scores$Treatment == \"untreated\", c(\"NMDS1\", \"NMDS2\")]), ]  # hull values for grp B\n\nhull.data <- rbind(grp.T, grp.U)  #combine grp.a and grp.b\n```\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE, fig.cap=\"Multidimensional Scaling Showing the Overlap of communities between treated and untreated areas\"}\n\nggplot()+  geom_polygon(data=hull.data,aes(x=NMDS1,y=NMDS2,fill=Treatment,group=Treatment),alpha=0.30) + # add the convex hulls\n  geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,shape=Crop,colour=FieldID.1),size=4) + \n  coord_equal() +\n  theme_bw() + \n  theme(axis.text.x = element_blank(),  # remove x-axis text\n        axis.text.y = element_blank(), # remove y-axis text\n        axis.ticks = element_blank(),  # remove axis ticks\n        axis.title.x = element_text(size=18), # remove x-axis labels\n        axis.title.y = element_text(size=18), # remove y-axis labels\n        panel.background = element_blank(), \n        panel.grid.major = element_blank(),  #remove major-grid labels\n        panel.grid.minor = element_blank(),  #remove minor-grid labels\n        plot.background = element_blank())\n## $ site : chr \"ATT2\" \"IHT3\" \"FGT3\" \"FGT2\" ...\n## $ FieldID : Factor w/ 25 levels \"\",\"ATT1\",\"ATT2\",..: 3 16 10 9 20 23 21 24 7 12 ...\n## $ FieldID.1: Factor w/ 5 levels \"\",\"AT\",\"FG\",\"IH\",..: 2 4 3 3 5 5 5 5 2 3 ...\n## $ Treatment: Factor w/ 3 levels \"\",\"treated\",\"untreated\": 2 2 2 2 2 2 2 3 3 3 ...\n## $ Crop : Factor w/ 8 levels \"\",\"corn\",\"grassland\",..: 7 2 2 2 2 5 2 6 6 3 ...\n```\n\n\n##NMDS Management Areas\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\ngrp.AT <- data.scores[data.scores$FieldID.1 == \"AT\", ][chull(data.scores[data.scores$FieldID.1 == \"AT\", c(\"NMDS1\", \"NMDS2\")]), ]  # hull values for grp Treatment\ngrp.FG <- data.scores[data.scores$FieldID.1 == \"FG\", ][chull(data.scores[data.scores$FieldID.1 == \"FG\", c(\"NMDS1\", \"NMDS2\")]), ]  # hull values for grp B\ngrp.IH <- data.scores[data.scores$FieldID.1 == \"IH\", ][chull(data.scores[data.scores$FieldID.1 == \"IH\", c(\"NMDS1\", \"NMDS2\")]), ]  # hull values for grp Treatment\ngrp.WC <- data.scores[data.scores$FieldID.1 == \"WC\", ][chull(data.scores[data.scores$FieldID.1 == \"WC\", c(\"NMDS1\", \"NMDS2\")]), ]  # hull values for grp B\n\nsite.hull.data <- rbind(grp.AT, grp.FG, grp.IH, grp.WC)  #combine grp.a and grp.b\n```\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE, fig.cap=\"Multidimensional Scaling Showing the Overlap of communities between Management Areas\"}\n\nggplot()+  geom_polygon(data=site.hull.data,aes(x=NMDS1,y=NMDS2,fill=FieldID.1,group=FieldID.1),alpha=0.30) + # add the convex hulls\n  geom_point(data=data.scores,aes(x=NMDS1,y=NMDS2,shape=Treatment,colour=Crop),size=4) + \n  coord_equal() +\n  theme_bw() + \n  theme(axis.text.x = element_blank(),  # remove x-axis text\n        axis.text.y = element_blank(), # remove y-axis text\n        axis.ticks = element_blank(),  # remove axis ticks\n        axis.title.x = element_text(size=18), # remove x-axis labels\n        axis.title.y = element_text(size=18), # remove y-axis labels\n        panel.background = element_blank(), \n        panel.grid.major = element_blank(),  #remove major-grid labels\n        panel.grid.minor = element_blank(),  #remove minor-grid labels\n        plot.background = element_blank())\n\n```\n\n#Alpha diversity\n\n```{r, echo=FALSE, fig.cap= \"Alpha diversity grouped by site and Treatment\"}\nAlpharesults <- cbind(BeesManagement,diversity(BeesOnly))\ncolnames(Alpharesults) <- c(\"ID\",\"Site\", \"Treatment\", \"Crop\", \"Diversity\")\nggplot(Alpharesults, aes(x = Site, y = Diversity))+ geom_boxplot(aes(color = Treatment))\nAlphasummary <- group_by(Alpharesults, Site, Treatment)\nAlphasummary <- summarize(Alphasummary, Mean = mean(Diversity), SD = sd(Diversity))\n\nkable(Alphasummary)\n```\n\n```{r, echo=FALSE, fig.cap= \"Alpha diversity grouped by site and Treatment\"}\ndodge <- position_dodge(width=0.9)\n\nggplot(Alphasummary, aes(x = Site, y = Mean)) + geom_bar(position = \"dodge\",stat = \"identity\", aes(fill = Treatment))\n```\n\n```{r, echo=FALSE, cache=TRUE}\nglmalpha <- glmulti(glm(Diversity~ Site + Treatment + Crop, data = Alpharesults), crit = \"aicc\")\n\nkable(weightable(glmalpha))\n\n```\n\n\n```{r, echo=FALSE, cache=TRUE, results='asis'}\nlme.model  =  lmer(Diversity~Treatment +  (1|Site) + (1|Crop), data = Alpharesults)\n\nstargazer(lme.model)\n```",
    "created" : 1475681627205.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3479286491",
    "id" : "22A7B01A",
    "lastKnownWriteTime" : 1482798949,
    "last_content_update" : 1482798949326,
    "path" : "~/Metanalysis/BeeAnalysis.Rmd",
    "project_path" : "BeeAnalysis.Rmd",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}