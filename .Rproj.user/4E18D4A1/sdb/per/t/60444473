{
    "collab_server" : "",
    "contents" : "#Load the data\nnewDat <- readRDS(\"newDat.rds\")\nSK <- readRDS(\"SK.prairie.banding.rds\")\n\n\n#Load packages\nlibrary(lme4)\nlibrary(boot)\nlibrary(merTools)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n#Group Birds by year\nSK.by.year <- group_by(SK, year)\n\n#Calculate the Observed proportion of youngs by yeat\nSK.by.year <- summarise(SK.by.year, prop = weighted.mean(Young, Count.of.Birds), pond.count = mean(pond.count), summerfallow = mean(summerfallow), natural.area = mean(natural.area))\n#Set \"mean\" location\nSK.by.year$location <- as.factor(551475)\n\n\n#fit glmer model\nfit1 <- glmer(Young ~ pond.count + (1|year/location), family = \"binomial\", weight = Count.of.Birds, data = SK)\n#Create the bootstrap for the line + ribbon part of the graph\nbootfit2 <- bootMer(fit1, FUN=function(x)predict(x, newDat, allow.new.levels=T, type = \"response\"),nsim=100)\napply(bootfit2$t, 2, sd)\nnewDat$lci <- apply(bootfit2$t, 2, quantile, 0.025)\nnewDat$uci <- apply(bootfit2$t, 2, quantile, 0.975)\nnewDat$Youngprop <- predict(fit1, newDat, allow.new.levels=T, type =\"response\")\n\n#Pred is the predicted value for the 51 observed points\nSK.by.year$pred <- predict(fit1, SK.by.year, allow.new.levels=T, type =\"response\")\n\n#Create a separate Bootfit for the prediction over observed yearly points\nbootfit3 <- bootMer(fit1, FUN=function(x)predict(x, SK.by.year, allow.new.levels=T, type = \"response\"),nsim=100)\n\n#Use them to get the standard error and standard deviation for each point\nSK.by.year$se <- (apply(bootfit3$t, 2, sd)/sqrt(length(bootfit3$t)))\nSK.by.year$SD <- apply(bootfit3$t, 2, sd)\n\n#Change the years to numeirc in order to generate the Decadal binning\nSK$B.Year <- as.numeric(as.character(SK$B.Year))\nSK.by.year$year <- as.numeric(as.character(SK.by.year$year))\n\n#Bin the decades for both databases SK and SK.by.year\nSK$decade <- ifelse(SK$B.Year < 1970, as.character(\"1960s\"), ifelse(SK$B.Year >= 1970 & SK$B.Year < 1980, as.character(\"1970s\"), ifelse(SK$B.Year >= 1980 & SK$B.Year < 1990, as.character(\"1980s\"), ifelse(SK$B.Year >= 1990 & SK$B.Year < 2000, as.character(\"1990s\"), ifelse(SK$B.Year >= 2000 & SK$B.Year < 2010, as.character(\"2000s\"), as.character(\"2010s\"))))))\nSK.by.year$Decade <- ifelse(SK.by.year$year < 1970, as.character(\"1960s\"), ifelse(SK.by.year$year >= 1970 & SK.by.year$year < 1980, as.character(\"1970s\"), ifelse(SK.by.year$year >= 1980 & SK.by.year$year < 1990, as.character(\"1980s\"), ifelse(SK.by.year$year >= 1990 & SK.by.year$year < 2000, as.character(\"1990s\"), ifelse(SK.by.year$year >= 2000 & SK.by.year$year < 2010, as.character(\"2000s\"), as.character(\"2010s\"))))))\n\n#Create a color palet, in this case it goes from Paleturquoise to blue 4, spanning 6 colors\n#for more colors go to http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\ncc <- scales::seq_gradient_pal(\"paleturquoise1\", \"blue4\", \"Lab\")(seq(0,1,length.out=6))\ncc <- scales::seq_gradient_pal(\"paleturquoise1\", \"blue4\", \"Lab\")(seq(0,1,length.out=6))\n\n#####GGPLOTS###########\n#######################\n\n#non summarised plot binomial with jittering\np1 <- ggplot(data = newDat, aes(x = pond.count, y = Youngprop))+ geom_line(size = 1, color = \"black\")+ geom_ribbon(aes(ymin = lci, ymax= uci), fill = \"red\", alpha = 0.5) + xlab(\"Pond count\") + ylab(\"Proportion of juveniles\") +geom_point(data = SK, aes(y = Young, x = pond.count, color = decade), alpha = 0.5,position=position_jitter(width=0, height=0.15))+\n  theme(legend.position=\"bottom\") +scale_color_manual(values =cc)\n\n#The selected plot, with points and standard errors\np2 <- ggplot(data = newDat, aes(x = pond.count, y = Youngprop))+ geom_line(size = 1, color = \"black\")+ geom_ribbon(aes(ymin = lci, ymax= uci), fill = \"grey\", alpha = 0.5) + xlab(\"Pond count\") + ylab(\"Proportion of juveniles\") +\n  theme(legend.position=\"bottom\") + ylim(c(0,1))\n\np2 <- p2 + geom_errorbar(size = 0.3,inherit.aes = FALSE\t, data= SK.by.year, aes(x = pond.count),ymin = (SK.by.year$pred - SK.by.year$SD), ymax =(SK.by.year$pred + SK.by.year$SD), width = 0.07)+geom_point(data = SK.by.year, aes(x = pond.count, y = pred, color = Decade), size = 1.5)+ theme(\n  panel.background = element_rect(fill = \"transparent\",colour = NA), # or theme_blank()\n  panel.grid.minor = element_blank(),\n  panel.grid.major = element_blank(),\n  plot.background = element_rect(fill = \"transparent\",colour = NA)\n)+\n  theme(axis.line.x = element_line(color=\"black\", size = 0.5),\n        axis.line.y = element_line(color=\"black\", size = 0.5))\n\n# x = year, y = Porportion of young\n\np3 <- ggplot(data = newDat, aes(x = as.numeric(as.character(year)), y = Youngprop)) + geom_smooth(data = SK.by.year,aes(x = year, y = prop))+ xlab(\"Year\") + ylab(\"Proportion of young\") +geom_point(data = SK.by.year, aes(x = year, y = prop, color = pond.count), alpha = 0.5)+\n  theme(legend.position=\"bottom\") \n\n#If you want to combine many ggplots you use gridextra\n\nlibrary(gridExtra)\n\n#Just list the names of the plots and add number of columns\ngrid.arrange(p1, p2, p3, ncol = 2)\n\n\n######Surface plots\n\n#Load packages\nlibrary(caret)\nlibrary(lme4)\nlibrary(rgl)\nlibrary(scatterplot3d)\n\n#Load data\nnewDat <- readRDS(\"newDat.rds\")\nM11z <- readRDS(\"M11z.rds\")\nSK <- readRDS(\"SK.prairie.banding.rds\")\n\n#Fit model\nfit2 <- glmer(Young ~ summerfallow + natural.area + pond.count + (1|year/location), family = \"binomial\", weight = Count.of.Birds, data = SK)\n\n\n#Expand grid makes an all possible combination dataframe to predict on\nSurfacegrid <-  expand.grid(summerfallow = seq(from = min(SK$summerfallow), to = max(SK$summerfallow), length.out = 50), natural.area = seq(from = min(SK$natural.area), to = max(SK$natural.area), length.out = 100))\n\n#Fix all other variables to the mean\nSurfacegrid$pond.count <- 0.1853\nSurfacegrid$year <- as.factor(1987)\nSurfacegrid$location <- as.factor(551475)\n\n#Predict the Proportion of youngs for the 3D plot\nSurfacegrid$Young <- predict(fit2, Surfacegrid, re.form = NA, type = \"response\")\n\n#plot moving 3d for personal visualization and gifs\nplot3d(x =Surfacegrid$natural.area, y = Surfacegrid$Young, Surfacegrid$summerfallow, col = \"red\",xlab = \"Summerfallow\", ylab =\"Proportion of youngs\", zlab = \"Natural Area\")\n\n\n#Actuall 3d surface for plot\nscat3d <- scatterplot3d(x =Surfacegrid$natural.area, y = Surfacegrid$summerfallow, Surfacegrid$Young, pch = 1, xlab = \"Natural area\", ylab = \"Summerfallow\", zlab = \"Proportion of youngs\", highlight.3d = TRUE, grid = FALSE, angle = 200, x.ticklabs = seq(from = -1.5, to = 1.5, by = 0.5))\n\n\n#Add observed points to the plot\nscat3d$points3d(x = SK.by.year$natural.area, y = SK.by.year$summerfallow, SK.by.year$prop,\n             col=\"blue\", pch=16)\n\n#If you want to test angles this is the loop I made\n\nfor (i in seq(from =0, to = 270, by = 2)){\n  Title = as.character(i)\n  scatterplot3d(x =Surfacegrid$natural.area, y = Surfacegrid$summerfallow, Surfacegrid$Young, color = \"red\", pch = 1, xlab = \"Natural area\", ylab = \"Summerfallow\", zlab = \"Proportion of youngs\", highlight.3d = TRUE, grid = FALSE, angle = i, main = Title)\n}\n\n",
    "created" : 1478622454668.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2746512918",
    "id" : "60444473",
    "lastKnownWriteTime" : 1478622568,
    "last_content_update" : 1478622568337,
    "path" : "~/Metanalysis/DabblingSK.R",
    "project_path" : "DabblingSK.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 13,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}